完全二叉树、红黑树(平衡二叉搜索树)
1.二叉树节点结构:
class Node{
	int value;
	Node left;
	Node right;
	Node (int data){
		this.value = data;
	}
}
2.二叉树遍历:
	2.1.先序:遍历:中,左,右
	2.2.中序遍历:左,中,右
	2.3.后序遍历:左,右,中
	2.4.层序遍历:// 牛客网-直通BAT面试 课程

一.二叉搜索树:
1.二分查找法:只有在有序数列,才能使用二分查找
2.二分搜索树:高效的查找\插入\删除数据	
	2.1.二分搜索树特点:
		(1).是一颗二叉树;
		(2).每个节点的键值大于左子节点;
		(3).每个节点的键值小于右子节点;
		(4).以左右子节点为根的树仍为二分搜索树
	2.2.二分搜索树深度遍历:
		(1).前序遍历:先访问当前节点,再依次递归访问左右子树;
		(2).中序遍历:先递归访问左子树,再访问自身,再依次递归访问右子树;
		(3).后序遍历:先递归访问左右子树,在访问自身节点
	2.3.二分搜索树广度优先遍历(层序)
	2.4.二分搜索树中节点的删除
	2.5.二分搜索树中的顺序性
		(1).最大与最小
		(2).前区节点和后置节点
		(3).floor 和 ceil
		(4).rank 和 select
3.trie 实现
二.平衡二叉树:
1.红黑树

2.2-3 树 

3.AVL 树

4.Splay 树













































































